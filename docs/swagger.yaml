basePath: /api/v1
definitions:
  handlers.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  handlers.SuccessResponse:
    properties:
      data:
        type: object
      status:
        type: string
    type: object
  models.Comments:
    properties:
      body:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      post_id:
        type: integer
    type: object
  models.Posts:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.UserLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Users:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
host: localhost:8181
info:
  contact: {}
  description: REST API server from NIX education
  title: Blog API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: Enter your username and password
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User login
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: user sign up
      parameters:
      - description: Enter your registration details
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User signup
      tags:
      - Auth
  /comments:
    get:
      consumes:
      - application/json
      description: returning all comments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all comments
      tags:
      - Comments
    post:
      consumes:
      - application/json
      description: created new comments
      parameters:
      - description: Enter comment data to create a comment
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Comments'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create new comments
      tags:
      - Comments
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: deleted comment data
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete comment by ID
      tags:
      - Comments
    get:
      consumes:
      - application/json
      description: returning comment data by ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comments'
      summary: Get comment by ID
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: updated comment data
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Enter comment data to create a comment
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Comments'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update comment by ID
      tags:
      - Comments
  /posts:
    get:
      consumes:
      - application/json
      description: returning all post
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all posts
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: created new post
      parameters:
      - description: Enter post data to create a new post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Posts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create new post
      tags:
      - Posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: deleted post data
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete post by ID
      tags:
      - Posts
    get:
      consumes:
      - application/json
      description: returning post data by ID
      operationId: get-string-by-int
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Posts'
      summary: Get post by ID
      tags:
      - Posts
    put:
      consumes:
      - application/json
      description: updated post data
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Enter post data to update a post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Posts'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update post by ID
      tags:
      - Posts
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
